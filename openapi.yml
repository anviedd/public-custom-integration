openapi: 3.0.0
info:
  title: Custom Integration
  description: |-
    Recustomer API for Return and Cancel v2
    # Introduction
    Custom Integrationは、Recustomerを利用するために必要な各種データを連携するためのAPIです。<br />
    このCustom Integrationは、Order importerとintegration APIの2つの要素で構成されています。<br />
    <br />
    ### Module1: Order Importer
    Order importer（Module1）は注文情報をMerchant環境からRecustomerに送信する役割を担っています。<br />
    注文情報が作成・更新されるたびに、エンドポイントが呼び出され、Recustomerに送信する必要があります。<br />
    <br />
    ### Integration API
    Integration API（Module2,3）はRecustomerからMerchant環境の各システムへと通信を行うAPIです。<br />
    RecustomerがMerchant環境へデータの更新やデータの取得をする必要がある場合に、このAPIを介して、Recustomerはデータの更新や取得を行います。<br />
    ### Module2: Exchange
    Exchangeモジュールは、交換を行う際に、商品のバリエーション情報や在庫情報をRecustomerが取得したり、交換商品の受注伝票をRecustomerが作成したりする場合に使用されます。<br />
    ### Module3: Cancel
    Cancelモジュールは、Recustomer上で注文のキャンセル処理が行われた際に、即座にその注文の出荷を停止するために使用されます。<br />
    Custom Integrationは、Recustomerを利用するために必要な各種データを連携するためのAPIです。<br />
    #### データフォーマット
    <ul>
      <li>country_code(国コード) : <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2</a></li>
    </ul>

    # Authentication 
    ### Order Importer（Module1）
    Recustomerからトークンとアクセスキーを提供します。それらのパラメータをAPIのheaderに含めて送信します。
    <table>
      <tr>
        <td>
          キー名
        </td>
        <td>
          概要
        </td>
      </tr>
      <tr>
        <td>
          api_store_key
        </td>
        <td>
          マーチャントを識別するためのキー情報です。
        </td>
      </tr>
      <tr>
        <td>
          api_token
        </td>
        <td>
          送信されたリクエストの認証に使うランダムな文字列です。
        </td>
      </tr>
    </table>

    ### Integration API（Module2,3）
    マーチャント環境に<b>トークン認証</b>を実装する必要があります。<br />
    Recustomerから「api_token」のキーでトークンをheaderに含めてマーチャント環境へAPIを送信します。<br />
    アクセストークンは外部サービス連携画面にて、Recustomerに提供する必要があります。
  version: 1.0.0
  # x-logo:
  #   url: notion://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ca291eb-759d-481b-bfbf-84aaa2bdd17d%2Flogo.png?id=0e6b1637-ed44-4e39-92a4-d4d5761b4c6e&table=block&spaceId=ee6cace2-9eea-4a9c-81f3-1a646693f604&width=2000&userId=b3b4ab11-cac2-4a93-97c3-7a0e7ea25879&cache=v2

servers:
  - url: "https://your_server_address"

paths:
  /orders/import:
    post:
      servers:
        - url: "https://entity.rcmr.io/external"
          description: 本番
      tags:
        - "module1: Order importer"
      summary: Order Importer
      description: 注文情報をRecustomerに送信します。
      parameters:
        - $ref: "#/components/parameters/StoreKey"
        - $ref: "#/components/parameters/Token"
      requestBody:
        $ref: "#/components/requestBodies/OrderImporter"

      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequestSuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"

  /products/{product_id}:
    get:
      tags:
        - "module2: Exchange"
      summary: Get Product Variants
      description: 交換の際に必要な商品情報、及び在庫情報を取得します
      parameters:
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/IntegrationToken"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /orders:
    post:
      tags:
        - "module2: Exchange"
      summary: Create Exchange Order
      description: 注文情報を作成します
      parameters:
        - $ref: "#/components/parameters/IntegrationToken"
      requestBody:
        $ref: "#/components/requestBodies/Order"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"
  /orders/cancel:
    post:
      tags:
        - "module3: Cancel"
      summary: Cancel Order
      description: 注文情報をキャンセルします
      parameters:
        - $ref: "#/components/parameters/IntegrationToken"
      requestBody:
        $ref: "#/components/requestBodies/OrderCancel"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"

components:
  parameters:
    OrderIds:
      name: ids
      in: query
      description: 注文idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
      example: 1,2,3
    OrderId:
      name: order_id
      in: path
      description: 指定の注文ID
      required: true
      schema:
        type: integer
        format: int64
    OrderNumber:
      name: order_number
      in: query
      schema:
        type: string
    ProductIds:
      name: ids
      in: query
      description: 商品idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
    ProductId:
      name: product_id
      in: path
      description: 指定の商品ID
      required: true
      schema:
        type: string
    Token:
      name: api_token
      in: header
      required: true
      description: 認証用トークン(Recustomerから提供します)
      schema:
        type: string
      example: "X12345678"
    IntegrationToken:
      name: api_token
      in: header
      required: true
      description: 認証用トークン
      schema:
        type: string
      example: "X12345678"
    StoreKey:
      name: api_store_key
      in: header
      required: true
      description: ストアKey(Recustomerから提供します)
      schema:
        type: string
      example: "test-store"

  requestBodies:
    Order:
      content:
        application/json:
          schema:
            type: object
            required:
              - order_id
              - line_items
              - order_discount_price
              - order_point_price
              - total_item_discount_amount
              - subtotal_price
              - total_shipping_price
              - total_discount
              - total_price
              - total_tax
              - currency
              - shipping_address
              - recustomer_request_id
              - billing_address
              - customer
              - is_tax_included
            properties:
              order_id:
                type: string
                example: "12345"
                description: 元の注文ID
              order_discount_price:
                $ref: "#/components/schemas/OrderDiscountPricePost"
              order_point_price:
                $ref: "#/components/schemas/OrderPointPricePost"
              total_item_discount_amount:
                $ref: "#/components/schemas/TotalItemDiscountAmount"
              subtotal_price:
                $ref: "#/components/schemas/SubtotalPrice"
              total_shipping_price:
                $ref: "#/components/schemas/TotalShippingPricePost"
              total_discount:
                $ref: "#/components/schemas/TotalDiscount"
              total_price:
                $ref: "#/components/schemas/TotalPrice"
              total_tax:
                $ref: "#/components/schemas/TotalTax"
              is_tax_included:
                type: boolean
                example: true
                description: total_amountが税を含む金額か
              currency:
                type: string
                example: "JPY"
                description: 通貨単位
              line_items:
                type: array
                items:
                  $ref: "#/components/schemas/OrderLineItem"
                description: 注文商品
              shipping_address:
                $ref: "#/components/schemas/ShippingAddress"
                description: 配送住所
              billing_address:
                $ref: "#/components/schemas/BillingAddress"
                description: 請求住所
              customer:
                $ref: "#/components/schemas/CustomerPost"
                description: 顧客情報
              recustomer_request_id:
                type: string
                example: "#1001"
                description: Recustomerの返品リクエスト申請ID
    OrderImporter:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderBase"
    OrderCancel:
      content:
        application/json:
          schema:
            type: object
            required:
              - order_id
            properties:
              order_id:
                type: string
                example: 12345
                description: キャンセルする注文ID
  schemas:
    HasNext:
      type: boolean
      description: 他データが存在するかどうか
    NextPageToken:
      type: string
      description: 次データのハッシュ値 次データが存在しない場合にはnullとする
      nullable: true
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
        order_number:
          type: string
        status:
          type: string
          # TODO: ステータスの内容は検討
          enum:
            [
              "processing",
              "returned",
              "refunded",
              "shipped",
              "partial_returned",
              "partial_refunded",
              "partial_shipped",
              "canceled",
              "partial_canceled",
            ]
          description: "processing: 処理中、returned: 返品済み、refunded: 返金済み、shipped: 発送済み、partial_returned: 一部返品済み、partial_refunded: 一部返金済み、partial_shipped: 一部発送済み、canceled: キャンセル済み、partial_canceled"
        total_amount:
          type: string
        total_product_amount:
          type: string
        total_discount_amount:
          type: string
        total_tax_amount:
          type: string
        pre_discount_amount:
          type: string
          example: 1100
          description: 割引前商品価格(税込)の合計
        is_tax_included:
          type: boolean
          example: true
          description: total_amountが税を含む金額か
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItem"
        shipping_address:
          $ref: "#/components/schemas/ShippingAddress"
        # billing_address:
        #   $ref: "#/components/schemas/BillingAddress"
    OrderLineItemImporter:
      type: object
      required:
        - id
        - quantity
        - product_id
        - sku
        - item_discount_price
        - item_discount_amount
        - item_price
        - item_compare_at_price
        - item_quantity
        - item_price_amount
        - item_tax_price
        - fulfillment_status
        - is_tax_included
        - created_at
        - updated_at
        - product_name
        - item_image
      properties:
        id:
          type: string
          example: "1000"
          description: ラインアイテムID
        product_id:
          type: string
          example: "product_id"
          description: 商品ID
        product_name:
          type: string
          example: "テスト商品"
          description: 商品名
        variant_id:
          type: string
          example: "2538974832789"
          description: バリエーションID
        sku:
          type: string
          example: "product_id_S_Red"
          description: SKU
        item_image:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像
        item_discount_price:
          $ref: "#/components/schemas/ItemDiscountPrice"
        item_discount_amount:
          $ref: "#/components/schemas/ItemDiscountAmount"
        item_price:
          $ref: "#/components/schemas/ItemPrice"
        item_compare_at_price:
          $ref: "#/components/schemas/ItemCompareAtPrice"
        item_cost:
          type: string
          description: "注文時点での商品原価"
          example: 100
        item_quantity:
          $ref: "#/components/schemas/ItemQuantity"
        item_price_amount:
          $ref: "#/components/schemas/ItemPriceAmount"
        item_tax_price:
          $ref: "#/components/schemas/ItemTaxPrice"
        is_tax_included:
          type: boolean
          example: true
          description: item_price_amountが税を含む金額か
        fulfillment_status:
          type: string
          enum: ["null", "fulfilled", "partial", "not_eligible"]
          description: "発送状況 null: 未発送、fulfilled: 発送済み, partial: 一部発送済み, not_eligible: 発送対象外"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
          description: バリエーションのオプション
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        metafields:
          type: array
          items:
            $ref: "#/components/schemas/Metafields"
          description: 独自で設定したいカラム情報

    OrderLineItem:
      type: object
      required:
        - id
        - item_id
        - quantity
        - product_id
        - sku
        - item_discount_price
        - item_discount_amount
        - item_price
        - item_compare_at_price
        - item_quantity
        - item_price_amount
        - item_tax_price
        - fulfillment_status
        - is_tax_included
        - product_name
        - item_image
      properties:
        id:
          type: integer
          example: 1000
          description: ラインアイテムID
        item_id:
          type: string
          example: "123"
          description: 元のラインアイテムID
        product_id:
          type: string
          example: "product_id"
          description: 商品ID
        product_name:
          type: string
          example: "テスト商品"
          description: 商品名
        variant_id:
          type: string
          example: "2538974832789"
          description: バリエーションID
        sku:
          type: string
          example: "product_id_S_Red"
          description: SKU
        item_image:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像
        # total_amount:
        #   type: string
        #   example: 990
        #   description: 合計金額
        # product_amount:
        #   type: string
        #   example: 1000
        #   description: 商品の金額の合計
        # discount_amount:
        #   type: string
        #   example: 100
        #   description: 割引額の合計
        # tax_amount:
        #   type: string
        #   example: 90
        #   description: 税の合計
        # pre_discount_amount:
        #   type: string
        #   example: 1100
        #   description: 割引前商品価格(税込)の合計
        item_discount_price:
          $ref: "#/components/schemas/ItemDiscountPrice"
        item_discount_amount:
          $ref: "#/components/schemas/ItemDiscountAmount"
        item_price:
          $ref: "#/components/schemas/ItemPrice"
        item_compare_at_price:
          $ref: "#/components/schemas/ItemCompareAtPrice"
        item_quantity:
          $ref: "#/components/schemas/ItemQuantity"
        item_price_amount:
          $ref: "#/components/schemas/ItemPriceAmount"
        item_tax_price:
          $ref: "#/components/schemas/ItemTaxPrice"
        is_tax_included:
          type: boolean
          example: true
          description: item_price_amountが税を含む金額か
        fulfillment_status:
          type: string
          enum: ["null", "fulfilled", "partial", "not_eligible"]
          description: "発送状況 null: 未発送、fulfilled: 発送済み, partial: 一部発送済み, not_eligible: 発送対象外"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
          description: バリエーションのオプション

    OrderLineItemOption:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: "オプション名"
          example: "カラー"
        value:
          type: string
          description: "オプションに設定されている値"
          example: "レッド"
      description: "商品に設定されているオプション"

    Address:
      type: object
      description: 住所情報
      required:
        - country
        - postal_code
        - province
        - city
        - street1
      properties:
        country_code:
          type: string
          example: "JP"
          description: 国コード 日本の場合"JP" ISO-3166-2参照
        postal_code:
          type: string
          example: "1010024"
          description: 郵便番号
        province:
          type: string
          example: "東京都"
          description: 都道府県
        city:
          type: string
          example: "千代田区"
          description: 市区町村
        address1:
          type: string
          example: "神田和泉町1-8-11"
          description: 住所情報1
        address2:
          type: string
          example: "サン・センタービル5F"
          description: 住所情報2
    ShippingAddress:
      type: object
      description: 配送先住所
      required:
        - full_name
        - address
      properties:
        first_name:
          type: string
          example: "太郎"
          description: 名
        last_name:
          type: string
          example: "佐藤"
          description: 姓
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号
        address:
          $ref: "#/components/schemas/Address"
          description: 住所情報
    BillingAddress:
      type: object
      description: 請求先住所
      required:
        - full_name
        - address
      properties:
        first_name:
          type: string
          example: "太郎"
          description: 名
        last_name:
          type: string
          example: "佐藤"
          description: 姓
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号
        address:
          $ref: "#/components/schemas/Address"
          description: 住所情報
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Product:
      type: object
      required:
        - product_id
        - product_name
        - variants
      properties:
        product_id:
          type: string
          example: "product_id"
          description: 商品ID
        product_name:
          type: string
          example: "テスト商品"
          description: 商品名
        image_url:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像のリンク
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        variants:
          type: array
          items:
            $ref: "#/components/schemas/Variant"
    Variants:
      type: array
      items:
        $ref: "#/components/schemas/Variant"
    Variant:
      type: object
      description: バリエーション情報
      required:
        - quantity_in_stock
        - name
        - sku
      properties:
        variant_id:
          type: string
          example: "2538974832789"
          description: バリエーションID
        sku:
          type: string
          example: test-product
          description: SKU
        image_url:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像
        name:
          type: string
          example: "テスト商品"
          description: 商品名
        quantity_in_stock:
          type: integer
          format: int64
          description: "利用可能な在庫数"
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
          description: 設定されているオプション情報
    Customer:
      type: object
      description: 顧客情報
      required:
        - email
        - full_name
        - created_at
        - updated_at
      properties:
        customer_id:
          type: string
          example: "1"
          description: カスタマーID
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        last_name:
          type: string
          nullable: true
          example: "佐藤"
          description: 姓
        first_name:
          type: string
          nullable: true
          example: "太郎"
          description: 名
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号
        is_consent_email_marketing:
          type: boolean
          example: false
          description: emailマーケティングに同意しているか
        is_consent_sms_marketing:
          type: boolean
          example: false
          description: SMSマーケティングに同意しているか
        purchase_times:
          type: integer
          example: 11
          description: 購入回数
        customer_tags:
          type: array
          items:
            type: string
          description: 顧客タグ
          example:
            - "test顧客"
            - "一般会員"
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        metafields:
          type: array
          items:
            $ref: "#/components/schemas/Metafields"
          description: 独自で設定したいカラム情報
    CustomerPost:
      type: object
      description: 顧客情報
      properties:
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        last_name:
          type: string
          nullable: true
          example: "佐藤"
          description: 姓
        first_name:
          type: string
          nullable: true
          example: "太郎"
          description: 名
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号

    Created_at:
      type: string
      example: "2023-05-10T12:00:00+09:00"
      description: 作成日時
    Updated_at:
      type: string
      example: "2023-05-12T10:30:00+09:00"
      description: 更新日時
    OrderFulfillment:
      type: object
      properties:
        id:
          type: string
          example: "1"
          description: 発送情報ID
        status:
          type: string
          enum: ["pending", "open", "success", "cancelled", "failure"]
          description: "発送状況 pending: 保留中、open: 処理中、success: 処理成功、cancelled: キャンセル、failure: 処理失敗"
        tracking_company:
          type: string
          enum:
            - "yamato"
            - "sagawa"
            - "jp"
            - "seino_unyu"
            - "eco_hai"
            - "global"
            - "others"
          example: yamato
          description: "配送会社 yamato: ヤマト運輸、sagawa: 佐川集荷、jp: 日本郵便、seino_unyu: 西濃運輸、eco_hai: エコ配、global: 国際宅配便、others: その他"
        tracking_number:
          type: string
          description: 追跡番号
          example: "4983892"
        fulfillment_line_items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentLineItems"
          description: 発送商品
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
          description: 発送日時
        updated_at:
          $ref: "#/components/schemas/Updated_at"
      required:
        - id
        - status
    FulfillmentLineItems:
      type: object
      properties:
        id:
          type: string
          example: "1"
          description: 発送商品ID
        order_line_item_id:
          type: integer
          example: 1
          description: 発送された商品のline_item_id
        quantity:
          type: integer
          example: 2
          description: 配送済みの商品数
      required:
        - id
        - order_line_item_id
        - quantity
    OrderTransaction:
      type: object
      required:
        - id
        - amount
        - currency
        - status
        - gateway
      description: 料金情報
      properties:
        id:
          type: string
          example: "2"
          description: トランザクションID
        parent_id:
          type: integer
          example: 1
          description: 紐づく親トランザクションID
        amount:
          type: string
          example: 1000
          description: 取引金額
        currency:
          type: string
          example: "JPY"
          description: 通貨単位 参考(https://en.wikipedia.org/wiki/ISO_4217)
        status:
          type: string
          enum: ["success", "failure", "pending"]
          description: "取引ステータス success: 成功、failure: 失敗、pending: 保留"
        gateway:
          type: string
          description: 取引ゲートウェイ
          example: manual
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"

    PostRequestSuccessResponse:
      type: object
      properties:
        results:
          type: string
          example: "success"
    PostRequest400Response:
      type: object
      properties:
        message:
          type: string
          example: "Bad Request"
          description: "エラー詳細が格納されます"
    PostRequest401Response:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized"
          description: "エラー詳細が格納されます"
    PostRequest422Response:
      type: object
      properties:
        message:
          type: string
          example: "Unprocessable Entity"
          description: "エラー詳細が格納されます"
    PostRequest500Response:
      type: object
      properties:
        message:
          type: string
          example: "Internal Server Error"
          description: "エラー詳細が格納されます(Recustomerにエラーが発生している可能性がございます。お手数ですがお問合せください)"
    OrderDiscountAmount:
      type: string
      description: "注文に対してのディスカウント金額合計（モール利用の場合は、モール原資クーポン+店舗原資クーポン）"
      example: 100
    OrderPointPrice:
      type: string
      description: "注文に対してのポイント利用"
      example: 100
    OrderDiscountPricePost:
      type: string
      description: "注文に対してのディスカウント(通常は0でPostします)"
      example: 0
    OrderPointPricePost:
      type: string
      description: "注文に対してのポイント利用(通常は0でPostします)"
      example: 0
    TotalItemDiscountAmount:
      type: string
      description: "商品ディスカウント合計"
      example: 100
    SubtotalPrice:
      type: string
      description: "商品小計"
      example: 100
    TotalShippingPrice:
      type: string
      description: "注文時の送料"
    TotalShippingPricePost:
      type: string
      description: "注文時の送料(通常は0でPostします)"
      example: 0
    TotalDiscount:
      type: string
      description: "ディスカウント合計（order_discount_amount+order_point_price+total_item_discount_amount）"
      example: 100
    TotalPrice:
      type: string
      description: "合計金額"
      example: 100
    TotalTax:
      type: string
      description: "税"
      example: 100
    ItemDiscountPrice:
      type: string
      description: "商品に対してのディスカウント"
      example: 100
    ItemDiscountAmount:
      type: string
      description: "商品のディスカウント合計"
      example: 100
    ItemPrice:
      type: string
      description: "商品の販売価格"
      example: 100
    ItemCompareAtPrice:
      type: string
      description: "商品の定価"
      example: 100
    ItemQuantity:
      type: string
      description: "商品の数量"
      example: 1
    ItemPriceAmount:
      type: string
      description: "商品の販売価格合計"
      example: 100
    ItemTaxPrice:
      type: string
      description: "税"
      example: 100
    OrderBase:
      type: object
      required:
        - id
        - order_number
        - status
        - order_discount_price
        - order_point_price
        - total_item_discount_amount
        - subtotal_price
        - total_shipping_price
        - total_discount
        - total_price
        - total_tax
        - currency
        - customer
        - line_items
        - shipping_address
        - billing_address
        - fulfillments
        - created_at
        - fulfillment_status
        - is_tax_included
        - quantity
        - financial_status
      properties:
        id:
          type: string
          example: 1234567
          description: 注文ID
        order_number:
          type: string
          example: 1001
          description: 注文番号
        status:
          type: string
          # TODO: ステータスの内容は検討
          enum: ["processing", "fulfilled", "partial_fulfilled", "canceled"]
          description: "注文ステータス processing: 処理中、fulfilled: 発送済み、partial_fulfilled: 一部発送済み、canceled: キャンセル済み"
          example: "processing"
        fulfillment_status:
          type: string
          enum: ["fulfilled", "null", "partial", "canceled"]
          description: "発送ステータス fulfilled: 発送済み、null: 未発送、partial: 一部発送済み、canceled: キャンセル済み"
          example: "fulfilled"
        financial_status:
          type: string
          enum:
            [
              "pending",
              "authorized",
              "partially_paid",
              "paid",
              "partially_refunded",
              "refunded",
              "voided",
            ]
          description: "支払いステータス pending: 保留中、authorized: 認証済み、partially_paid: 一部支払い済み、paid: 支払い済み、partially_refunded: 一部返金済み、refunded: 返金済み、voided: 無効"
          example: "paid"
        order_discount_amount:
          $ref: "#/components/schemas/OrderDiscountAmount"
        order_point_price:
          $ref: "#/components/schemas/OrderPointPrice"
        total_item_discount_amount:
          $ref: "#/components/schemas/TotalItemDiscountAmount"
        subtotal_price:
          $ref: "#/components/schemas/SubtotalPrice"
        total_shipping_price:
          $ref: "#/components/schemas/TotalShippingPrice"
        total_discount:
          $ref: "#/components/schemas/TotalDiscount"
        additional_fees_amount:
          type: string
          description: "その他費用合計"
          example: 100
        total_price:
          $ref: "#/components/schemas/TotalPrice"
        total_tax:
          $ref: "#/components/schemas/TotalTax"
        payment_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
          description: 入金日時
        is_tax_included:
          type: boolean
          example: true
          description: total_priceが税を含む金額か
        currency:
          type: string
          example: "JPY"
          description: 通貨単位
        quantity:
          type: integer
          example: 3
          description: 注文商品数の合計
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
          description: 注文日時
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        note:
          type: string
          example: "テスト注文"
          description: 注文の補足情報
        order_link:
          type: string
          example: "https://recustomer.me/order/1"
          description: 注文のリンク
        customer:
          $ref: "#/components/schemas/Customer"
          description: 顧客情報
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemImporter"
          description: 注文商品
        shipping_address:
          $ref: "#/components/schemas/ShippingAddress"
          description: 配送住所
        billing_address:
          $ref: "#/components/schemas/BillingAddress"
          description: 請求住所
        fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/OrderFulfillment"
          description: 発送情報
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/OrderTransaction"
          description: 料金情報(支払いが完了している場合必須)
        metafields:
          type: array
          items:
            $ref: "#/components/schemas/Metafields"
          description: 独自で設定したいカラム情報
    Metafields:
      type: object
      properties:
        key:
          type: string
          description: メタフィールドのキー
          example: "coupon_code"
        value:
          type: any
          description: メタフィールドのキーに対する値
          value: "test_coupon_1"
      required:
        - key
        - value
    OrderResponse:
      type: object
      required:
        - id
        - order_number
        - status
        - order_discount_price
        - order_point_price
        - total_item_discount_amount
        - subtotal_price
        - total_shipping_price
        - total_discount
        - total_price
        - total_tax
        - currency
        - customer
        - line_items
        - shipping_address
        - billing_address
        - fulfillments
        - created_at
        - fulfillment_status
        - is_tax_included
        - quantity
        - financial_status
      properties:
        id:
          type: string
          example: 1234567
          description: 注文ID
        order_number:
          type: string
          example: 1001
          description: 注文番号
        status:
          type: string
          # TODO: ステータスの内容は検討
          enum: ["processing", "fulfilled", "partial_fulfilled", "canceled"]
          description: "注文ステータス processing: 処理中、fulfilled: 発送済み、partial_fulfilled: 一部発送済み、canceled: キャンセル済み"
          example: "processing"
        fulfillment_status:
          type: string
          enum: ["fulfilled", "null", "partial", "canceled"]
          description: "発送ステータス fulfilled: 発送済み、null: 未発送、partial: 一部発送済み、canceled: キャンセル済み"
          example: "fulfilled"
        financial_status:
          type: string
          enum:
            [
              "pending",
              "authorized",
              "partially_paid",
              "paid",
              "partially_refunded",
              "refunded",
              "voided",
            ]
          description: "支払いステータス pending: 保留中、authorized: 認証済み、partially_paid: 一部支払い済み、paid: 支払い済み、partially_refunded: 一部返金済み、refunded: 返金済み、voided: 無効"
          example: "paid"
        order_discount_amount:
          $ref: "#/components/schemas/OrderDiscountAmount"
        order_point_price:
          $ref: "#/components/schemas/OrderPointPrice"
        total_item_discount_amount:
          $ref: "#/components/schemas/TotalItemDiscountAmount"
        subtotal_price:
          $ref: "#/components/schemas/SubtotalPrice"
        total_shipping_price:
          $ref: "#/components/schemas/TotalShippingPrice"
        total_discount:
          $ref: "#/components/schemas/TotalDiscount"
        additional_fees_amount:
          type: string
          description: "その他費用合計"
          example: 100
        total_price:
          $ref: "#/components/schemas/TotalPrice"
        total_tax:
          $ref: "#/components/schemas/TotalTax"
        payment_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
          description: 入金日時
        is_tax_included:
          type: boolean
          example: true
          description: total_priceが税を含む金額か
        currency:
          type: string
          example: "JPY"
          description: 通貨単位
        quantity:
          type: integer
          example: 3
          description: 注文商品数の合計
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        note:
          type: string
          example: "テスト注文"
          description: 注文の補足情報
        customer:
          $ref: "#/components/schemas/CustomerNotMetafield"
          description: 顧客情報
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemNotMetaField"
          description: 注文商品
        shipping_address:
          $ref: "#/components/schemas/ShippingAddress"
          description: 配送住所
        billing_address:
          $ref: "#/components/schemas/BillingAddress"
          description: 請求住所
        fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/OrderFulfillment"
          description: 発送情報
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/OrderTransaction"
          description: 料金情報(支払いが完了している場合必須)
    CustomerNotMetafield:
      type: object
      description: 顧客情報
      required:
        - email
        - full_name
        - created_at
        - updated_at
      properties:
        customer_id:
          type: string
          example: "1"
          description: カスタマーID
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        last_name:
          type: string
          nullable: true
          example: "佐藤"
          description: 姓
        first_name:
          type: string
          nullable: true
          example: "太郎"
          description: 名
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号
        is_consent_email_marketing:
          type: boolean
          example: false
          description: emailマーケティングに同意しているか
        is_consent_sms_marketing:
          type: boolean
          example: false
          description: SMSマーケティングに同意しているか
        purchase_times:
          type: integer
          example: 11
          description: 購入回数
        customer_tags:
          type: array
          items:
            type: string
          description: 顧客タグ
          example:
            - "test顧客"
            - "一般会員"
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
    OrderLineItemNotMetaField:
      type: object
      required:
        - id
        - quantity
        - product_id
        - sku
        - item_discount_price
        - item_discount_amount
        - item_price
        - item_compare_at_price
        - item_quantity
        - item_price_amount
        - item_tax_price
        - fulfillment_status
        - is_tax_included
        - created_at
        - updated_at
      properties:
        id:
          type: string
          example: "1000"
          description: ラインアイテムID
        product_id:
          type: string
          example: "product_id"
          description: 商品ID
        product_name:
          type: string
          example: "テスト商品"
          description: 商品名
        variant_id:
          type: string
          example: "2538974832789"
          description: バリエーションID
        sku:
          type: string
          example: "product_id_S_Red"
          description: SKU
        item_image:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像
        item_discount_price:
          $ref: "#/components/schemas/ItemDiscountPrice"
        item_discount_amount:
          $ref: "#/components/schemas/ItemDiscountAmount"
        item_price:
          $ref: "#/components/schemas/ItemPrice"
        item_compare_at_price:
          $ref: "#/components/schemas/ItemCompareAtPrice"
        item_cost:
          type: string
          description: "注文時点での商品原価"
          example: 100
        item_quantity:
          $ref: "#/components/schemas/ItemQuantity"
        item_price_amount:
          $ref: "#/components/schemas/ItemPriceAmount"
        item_tax_price:
          $ref: "#/components/schemas/ItemTaxPrice"
        is_tax_included:
          type: boolean
          example: true
          description: item_price_amountが税を含む金額か
        fulfillment_status:
          type: string
          enum: ["null", "fulfilled", "partial", "not_eligible"]
          description: "発送状況 null: 未発送、fulfilled: 発送済み, partial: 一部発送済み, not_eligible: 発送対象外"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
          description: バリエーションのオプション
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
